# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/use-cases-and-examples/building-and-testing/building-and-testing-java-with-maven

name: Java CI with Maven

on:
  pull_request:
    branches: [ main ]
    types: [closed]
permissions:
  # This is required for requesting the OIDC token
  id-token: write
  # This is required for actions/checkout
  contents: read
jobs:
  build:

    runs-on: ubuntu-latest
    strategy:
      matrix:
        java: [ '17' ]

    steps:
      - uses: actions/checkout@v4
      - name: Set up JDK ${{matrix.java}}
        uses: actions/setup-java@v4
        with:
          java-version: ${{matrix.java}}
          distribution: 'adopt'
          cache: maven
      - name: Setup JFrog CLI
        uses: jfrog/setup-jfrog-cli@v4
        env:
          # JFrog platform url (for example: https://acme.jfrog.io)
          JF_URL: ${{ vars.JF_URL }}
        with:
          oidc-provider-name: davpin/spring-petclinic@github
      - name: Configure JFrog CLI
        run: |
          jf c add my-jfrog-server --url $JF_URL --access-token ${{ steps.setup-jfrog-cli.outputs.jf-oidc-token }} 
          jf mvnc --repo-resolve-releases java-libs-release --repo-resolve-snapshots java-libs-snapshot --repo-deploy-snapshots java-libs-snapshot-local --repo-deploy-releases java-libs-release-local --use-wrapper=true
      - name: Compile with jfrog cli
        run: jf mvn -B compile 
      - name: Run tests with Maven Wrapper
        run: jf mvn -B test 
      - name: Build docker image with spring boot plugin
        run: jf mvn -B spring-boot:build-image
      - name: Publish Image to JFrog Artifactory
        env:
          IMAGE_NAME: clinic-docker/petclinic:${{ github.run_number }}
        run: |
          docker login -u ${{ steps.setup-jfrog-cli.outputs.jf-oidc-token }} -p ${{ steps.setup-jfrog-cli.outputs.jf-oidc-token }} trialyin7lg.jfrog.io
          docker push $IMAGE_NAME
      - name: Run Jfrog
        run: |
          jf rt ping
          jf rt bce
